# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/main.ipynb.

# %% auto 0
__all__ = ['logger', 'app', 'launch', 'run_app']

# %% ../nbs/main.ipynb 1
"""Main entry point for the WardBuddy application."""
import asyncio
from pathlib import Path
import typer
from typing import Optional
import logging

from .learning_interface import LearningInterface

# Configure logging
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

app = typer.Typer()

@app.command()
def launch(
    port: int = typer.Option(7860, help="Port to run on"),
    context_path: Optional[Path] = typer.Option(
        None,
        help="Path to context file",
        dir_okay=False
    ),
    model: str = typer.Option(
        "anthropic/claude-3-sonnet",
        help="OpenRouter model identifier"
    ),
    share: bool = typer.Option(
        False,
        help="Create public URL"
    )
) -> None:
    """Launch the clinical learning interface."""
    try:
        interface = LearningInterface(
            context_path=context_path,
            model=model
        )
        
        app = interface.create_interface()
        app.launch(
            server_port=port,
            share=share
        )
        
        logger.info(f"Interface launched on port {port}")
        
    except Exception as e:
        logger.error(f"Error launching interface: {str(e)}")
        raise typer.Exit(1)

def run_app():
    """Entry point for command line."""
    app()
